{"version":3,"sources":["../src/IntervalResizer.jsx"],"names":["propTypes","intervalUnit","number","isRequired","children","element","documentRef","object","timeoutDelay","minHeight","maxHeight","uniqueId","string","className","instantOnReceiveProps","bool","screenWidthCutoff","defaultProps","IntervalResizer","waitToRender","windowResizeListener","bind","resizeTimeout","window","addEventListener","props","removeEventListener","instant","clearTimeout","setTimeout","setWrapperHeight","resizeWrapper","getElementById","internalWrapper","firstChild","documentElement","clientWidth","style","height","contentHeight","offsetHeight","newHeight","getIntervalHeight","String","Math","ceil","max","min","floor"],"mappings":"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","file":"IntervalResizer.js","sourcesContent":["/* IntervalResizer.jsx -- A React resizer which detects the height of its\r\n * internals, then expands them to the next-biggest multiple of a pre-defined\r\n * interval.\r\n *\r\n * Copyright (C) 2017 Liam Ross\r\n *\r\n * This software may be modified and distributed under the terms of the MIT\r\n * license. See the LICENSE file for details.\r\n */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  intervalUnit: PropTypes.number.isRequired,  // Unit interval to grow by.\r\n  children: PropTypes.element.isRequired,     // Child to populate wrapper.\r\n  documentRef: PropTypes.object.isRequired,   // Reference to the document.\r\n  timeoutDelay: PropTypes.number,             // The re-render timeout.\r\n  minHeight: PropTypes.number,                // The resizer's minimum height.\r\n  maxHeight: PropTypes.number,                // The resizer's maximum height.\r\n  uniqueId: PropTypes.string,                 // A unique id (if > 1 resizer).\r\n  className: PropTypes.string,                // A general class.\r\n  instantOnReceiveProps: PropTypes.bool,      // Instant resize on get props.\r\n  screenWidthCutoff: PropTypes.number,        // Stop intervals at this width.\r\n};\r\n\r\nconst defaultProps = {\r\n  timeoutDelay: 0,              // No delay by default.\r\n  minHeight: null,              // No min height by default.\r\n  maxHeight: null,              // No max height by default.\r\n  uniqueId: '',                 // No extra id string by default.\r\n  className: null,              // No class by default.\r\n  instantOnReceiveProps: true,  // Instant resize on prop change by default.\r\n  screenWidthCutoff: 0,         // Cutoff at 0 width by default.\r\n};\r\n\r\nclass IntervalResizer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.waitToRender = null;\r\n    this.windowResizeListener = this.windowResizeListener.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resizeTimeout(true);\r\n    window.addEventListener('resize', this.windowResizeListener);\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    this.resizeTimeout(this.props.instantOnReceiveProps);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.windowResizeListener);\r\n  }\r\n\r\n  /**\r\n   * Necessary to discard arguments passed from event listener binding and\r\n   * pass false instead as resizeTimeout's 'instant' parameter.\r\n   */\r\n  windowResizeListener() {\r\n    this.resizeTimeout(false);\r\n  }\r\n\r\n  /**\r\n   * Starts a timeout based off of timeoutDelay prop. If function is called\r\n   * while timeout is in progress, it clears the timeout and begins again. Takes\r\n   * a boolean to determine whether it will call instantly.\r\n   * @param {boolean} instant - True to call setWrapperHeight instantly, false\r\n   * to wait for timeoutDelay.\r\n   */\r\n  resizeTimeout(instant) {\r\n    clearTimeout(this.waitToRender);\r\n    this.waitToRender = setTimeout(() => {\r\n      this.setWrapperHeight();\r\n    }, instant ? 0 : this.props.timeoutDelay);\r\n  }\r\n\r\n  /**\r\n   * Detects the internal wrapper height and sets the resize wrapper to the next\r\n   * larger intervalUnit multiple, then adjusts the content to fit that height.\r\n   * If the window is smaller than the screenWidthCutoff, then the component\r\n   * will match the height of the internals with no intervals.\r\n   */\r\n  setWrapperHeight() {\r\n    const { uniqueId, screenWidthCutoff, documentRef } = this.props;\r\n    const resizeWrapper = documentRef.getElementById(`interval_${uniqueId}`);\r\n    const internalWrapper = resizeWrapper.firstChild;\r\n    if (documentRef.documentElement.clientWidth > screenWidthCutoff) {\r\n      internalWrapper.style.height = 'auto';\r\n      const contentHeight = internalWrapper.offsetHeight;\r\n      const newHeight = this.getIntervalHeight(contentHeight);\r\n      resizeWrapper.style.height = `${String(newHeight)}px`;\r\n      internalWrapper.style.height = '100%';\r\n    } else {\r\n      resizeWrapper.style.height = 'auto';\r\n      internalWrapper.style.height = 'auto';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the height to a multiple of the intervalUnit unit, while accounting\r\n   * for the minHeight and maxHeight. Will override minHeight with maxHeight if\r\n   * maxHeight is smaller than minHeight.\r\n   * @param {number} contentHeight - The 'auto' height of the content.\r\n   * @returns {number} - Returns a multiple of your intervalUnit.\r\n   */\r\n  getIntervalHeight(contentHeight) {\r\n    const { intervalUnit, minHeight, maxHeight } = this.props;\r\n    let newHeight = Math.ceil(contentHeight / intervalUnit) * intervalUnit;\r\n    if (minHeight !== null) {\r\n      newHeight = Math.max(\r\n        newHeight,\r\n        Math.ceil(minHeight / intervalUnit) * intervalUnit,\r\n      );\r\n    }\r\n    if (maxHeight !== null) {\r\n      newHeight = Math.min(\r\n        newHeight,\r\n        Math.floor(maxHeight / intervalUnit) * intervalUnit,\r\n      );\r\n    }\r\n    return newHeight;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={`interval_${this.props.uniqueId}`}\r\n        className={this.props.className}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIntervalResizer.propTypes = propTypes;\r\nIntervalResizer.defaultProps = defaultProps;\r\n\r\nexport default IntervalResizer;\r\n"]}